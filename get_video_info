# Install required packages
!pip install pytube --upgrade
!pip install yt-dlp

import yt_dlp
import os
import time

def download_video(url):
    try:
        # Configure yt-dlp options
        ydl_opts = {
            'format': 'best',  # Download best quality
            'outtmpl': '%(title)s.%(ext)s',  # Output template
            'quiet': False,  # Show download progress
            'no_warnings': False,
            'progress': True
        }

        # Create yt-dlp object with the options
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            # Get video info first
            info = ydl.extract_info(url, download=False)
            print(f"\nVideo Title: {info['title']}")
            print(f"Duration: {info['duration']} seconds")
            print(f"Quality: {info['formats'][-1]['height']}p")

            # Confirm download
            confirm = input("\nDo you want to download this video? (y/n): ")
            if confirm.lower() == 'y':
                print("\nDownloading...")
                ydl.download([url])
                print(f"\nDownload completed: {info['title']}")
                return True
            else:
                print("Download cancelled.")
                return False

    except Exception as e:
        print(f"Error: {str(e)}")
        return False

def main():
    videos = []

    while True:
        print("\n=== YouTube Batch Downloader ===")
        print("1. Add video to queue")
        print("2. Show queue")
        print("3. Start downloading")
        print("4. Clear queue")
        print("5. Exit")

        choice = input("\nEnter your choice (1-5): ")

        if choice == '1':
            url = input("Enter YouTube video URL: ")
            videos.append(url)
            print("Video added to queue!")

        elif choice == '2':
            if len(videos) == 0:
                print("Queue is empty!")
            else:
                print("\nCurrent Queue:")
                for i, url in enumerate(videos, 1):
                    print(f"{i}. {url}")

        elif choice == '3':
            if len(videos) == 0:
                print("Queue is empty! Add some videos first.")
                continue

            print("\nStarting downloads...")

            for url in videos[:]:  # Create a copy of the list to iterate
                success = download_video(url)
                if success:
                    videos.remove(url)  # Remove successfully downloaded videos
                time.sleep(1)  # Small delay between downloads

            print("\nAll downloads completed!")

        elif choice == '4':
            videos.clear()
            print("Queue cleared!")

        elif choice == '5':
            print("Goodbye!")
            break

        else:
            print("Invalid choice. Please try again.")

# Run the main function
print("Starting YouTube Downloader...")
try:
    main()
except Exception as e:
    print(f"An unexpected error occurred: {str(e)}")
